{"version":3,"sources":["Loader.module.css","Form.js","Table.js","Loader.js","Filter.js","Info.js","params.js","App.js","index.js"],"names":["module","exports","Form","handleSubmit","handleChange","data","isCompleted","id","firstName","lastName","email","phone","className","onSubmit","type","value","onChange","placeholder","name","typs","disabled","Table","goTo","isFirstPage","isLastPage","dataSize","sort","setActive","sortBy","sortDirection","classList","field","onClick","map","key","Loader","firstClassList","styles","dot","first","secondClassList","second","thirdClassList","third","loader","Filter","text","Info","address","description","htmlFor","cols","rows","defaultValue","streetAddress","city","state","zip","urls","big","URL","small","increments","next","previous","isFilled","fields","every","isFormStateChanged","Object","values","App","appState","errorText","activeId","form","formData","table","tableData","page","filter","componentDidUpdate","a","setState","url","href","axios","get","message","uniqData","_","handleFormChange","dataField","target","addRow","row","e","preventDefault","find","alert","newTable","direction","increment","chooseDataSize","sortedData","result","reverse","handleFilterChange","handleFilterSubmit","previousState","this","filteredData","normalizedValues","toString","toLowerCase","normalizedText","includes","activeInfo","Math","floor","length","begin","end","tableProps","slice","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08362a54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3MXRD\",\"dot\":\"Loader_dot__2IXY8\",\"dots\":\"Loader_dots__30LQn\",\"first\":\"Loader_first__1DZ3R\",\"second\":\"Loader_second__1DNol\",\"third\":\"Loader_third__DhPq-\"};","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst Form = ({\n  handleSubmit, handleChange, data, isCompleted,\n}) => {\n  const {\n    id, firstName, lastName, email, phone,\n  } = data;\n\n  return (\n      <form className=\"form\" onSubmit={handleSubmit(data)}>\n        <input className=\"input\" type=\"number\" value={id} onChange={handleChange('id')} placeholder=\"id\" name=\"id\" />\n        <input\n          className=\"input\" type=\"text\" value={firstName} onChange={handleChange('firstName')}\n          placeholder=\"firstName\" name=\"firstName\"\n        />\n        <input\n          className=\"input\" type=\"text\" value={lastName} onChange={handleChange('lastName')}\n          placeholder=\"lastName\" name=\"lastName\"\n        />\n        <input\n          className=\"input\" type=\"email\" value={email} onChange={handleChange('email')}\n          placeholder=\"email\" name=\"email\"\n        />\n        <input\n          className=\"input\" type=\"tel\" value={phone} onChange={handleChange('phone')}\n          placeholder=\"phone number\" name=\"phone\"\n        />\n        <button typs=\"submit button\" disabled={!isCompleted}>Add</button>\n      </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nconst Table = ({\n  data, goTo, isFirstPage, isLastPage, dataSize, sort, setActive, sortBy, sortDirection,\n}) => {\n  const classList = (field) => (sortBy === field\n    ? `table-heading__item sort-by ${sortDirection}`\n    : 'table-heading__item'\n  );\n\n  return (<>\n    {dataSize === 'big'\n    && <div className=\"table-buttons\">\n      <button className=\"button previous\" onClick={goTo('previous')} disabled={isFirstPage}>Previous</button>\n      <button className=\"button next\" onClick={goTo('next')} disabled={isLastPage}>Next</button>\n    </div>}\n        <table className=\"table\">\n          <thead className=\"table-heading\">\n            <tr>\n              <th className={classList('id')} onClick={sort('id')}>id</th>\n              <th className={classList('firstName')} onClick={sort('firstName')}>firstName</th>\n              <th className={classList('lastName')} onClick={sort('lastName')}>lastName</th>\n              <th className={classList('email')} onClick={sort('email')}>email</th>\n              <th className={classList('phone')} onClick={sort('phone')}>phone</th>\n            </tr>\n          </thead>\n          <tbody>\n          {data && data.map(({\n            id, firstName, lastName, email, phone,\n          }) => (\n                <tr key={id} onClick={setActive(id)}>\n                  <td>{id}</td>\n                  <td>{firstName}</td>\n                  <td>{lastName}</td>\n                  <td>{email}</td>\n                  <td>{phone}</td>\n                </tr>\n          ))}\n          </tbody>\n        </table>\n  </>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  const firstClassList = `${styles.dot} ${styles.first}`;\n  const secondClassList = `${styles.dot} ${styles.second}`;\n  const thirdClassList = `${styles.dot} ${styles.third}`;\n  return (<div className={styles.loader}>\n    <span className={firstClassList}></span>\n    <span className={secondClassList}></span>\n    <span className={thirdClassList}></span>\n  </div>);\n};\n\nexport default Loader;\n","import React from 'react';\n\nconst Filter = ({ handleChange, handleSubmit, text }) => (\n      <form className=\"filter\" onSubmit={handleSubmit}>\n        <input className=\"input\" type=\"text\" value={text} onChange={handleChange}/>\n        <button className=\"button button-submit\" type=\"submit\">Filter</button>\n      </form>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst Info = ({\n  firstName, lastName, address, description,\n}) => (\n    <div className=\"info\">\n      <span className=\"info__item\">Выбран пользователь: <b>{`${firstName} ${lastName}`}</b></span>\n      <label htmlFor=\"description\" className=\"info__item\">Описание:</label>\n      <textarea className=\"info__item\" name=\"\" id=\"description\" cols=\"30\" rows=\"10\" defaultValue={description} />\n      <span className=\"info__item\">Адрес проживания: <b>{address.streetAddress}</b></span>\n      <span className=\"info__item\">Город: {address.city}</span>\n      <span className=\"info__item\">Провинция/штат: {address.state}</span>\n      <span>Индекс: {address.zip}</span>\n    </div>\n);\n\nexport default Info;\n","const urls = {\n  big: new URL('http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'),\n  small: new URL('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}'),\n};\nconst recordsPerPage = 50;\nconst increments = {\n  next: 1,\n  previous: -1,\n};\n\nexport { urls, recordsPerPage, increments };\n","/* eslint-disable no-alert */\nimport React from 'react';\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport './App.css';\nimport Form from './Form';\nimport Table from './Table';\nimport Loader from './Loader';\nimport Filter from './Filter';\nimport Info from './Info';\nimport { urls, increments, recordsPerPage } from './params';\n\nconst includes = (row, text) => {\n  const normalizedValues = Object.values(row).map((value) => value.toString().toLowerCase());\n  const normalizedText = text.toString().toLowerCase();\n  let result = false;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const value of normalizedValues) {\n    if (value.includes(normalizedText)) {\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\n\nconst isFilled = (fields) => fields.every((field) => field);\n\nconst isFormStateChanged = (data, isCompleted) => {\n  const fields = Object.values(data);\n  return (isFilled(fields) && !isCompleted) || (!isFilled(fields) && isCompleted);\n};\n\nexport default class App extends React.Component {\n  state = {\n    appState: 'initial',\n    errorText: '',\n    activeId: null,\n    form: {\n      isCompleted: false,\n      formData: {\n        id: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n      },\n    },\n    table: {\n      tableData: null,\n      dataSize: 'small',\n      sortBy: null,\n      sortDirection: null,\n      page: 1,\n    },\n    filter: {\n      text: '',\n      value: '',\n    },\n  }\n\n    componentDidUpdate = async () => {\n      const { appState, form: { formData, isCompleted }, table } = this.state;\n      if (isFormStateChanged(formData, isCompleted)) {\n        this.setState({ form: { formData, isCompleted: !isCompleted } });\n        return;\n      }\n      if (appState !== 'request') {\n        return;\n      }\n      const url = urls[table.dataSize].href;\n      try {\n        await axios.get(url);\n      } catch (e) {\n        this.setState({ appState: 'fail', errorText: e.message });\n        return;\n      }\n      const { data } = await axios.get(url);\n      const uniqData = _.uniqBy(data, 'id');\n      this.setState({ appState: 'success', table: { ...table, tableData: uniqData } });\n    }\n\n  handleFormChange = (dataField) => ({ target: { value } }) => {\n    const { formData } = this.state.form;\n    this.setState({ form: { formData: { ...formData, [dataField]: value } } });\n  }\n\n  addRow = (row) => (e) => {\n    e.preventDefault();\n    const { table } = this.state;\n    if (table.tableData.find(({ id }) => id === +row.id)) {\n      alert(`User with ${row.id} already exists. Choose another id.`);\n      return;\n    }\n    const newTable = { ...table, tableData: [row, ...this.state.table.tableData] };\n    this.setState({ table: newTable });\n    alert('Record added succesfully.');\n  }\n\n  goTo = (direction) => () => {\n    const { table } = this.state;\n    const increment = increments[direction] || 0;\n    const newTable = { ...table, page: table.page + increment };\n    this.setState({ table: newTable, activeId: null });\n  }\n\n  chooseDataSize = (dataSize) => () => {\n    const { table, form } = this.state;\n    const newTable = { ...table, dataSize };\n    this.setState({ appState: 'request', form, table: newTable });\n  }\n\n  sort = (field) => () => {\n    const { table } = this.state;\n    const sortDirection = table.sortDirection === 'asc' ? 'desc' : 'asc';\n    const sortedData = _.sortBy(table.tableData, (row) => row[field]);\n    const result = sortDirection === 'asc' ? sortedData : sortedData.reverse();\n    this.setState({\n      table: {\n        ...table, tableData: result, sortDirection, sortBy: field,\n      },\n    });\n  };\n\n  handleFilterChange = ({ target: { value: text } }) => {\n    const { filter: { value } } = this.state;\n    this.setState({ filter: { text, value } });\n  }\n\n  handleFilterSubmit = (e) => {\n    e.preventDefault();\n    const { filter: { text }, table } = this.state;\n    this.setState({ filter: { value: text, text }, table: { ...table, page: 1 }, activeId: null });\n  }\n\n  setActive = (id) => () => {\n    const previousState = { ...this.state };\n    this.setState({ ...previousState, activeId: id });\n  }\n\n  render() {\n    const {\n      appState, filter, activeId, errorText, form: { isCompleted, formData }, table: {\n        tableData, dataSize, page, sortBy, sortDirection,\n      },\n    } = this.state;\n    const filteredData = filter.value\n      ? _.filter(tableData, (row) => includes(row, filter.value))\n      : tableData;\n    const activeInfo = filteredData && filteredData.find(({ id }) => id === activeId);\n    const isFirstPage = page === 1;\n    const isLastPage = filteredData && page === Math.floor(filteredData.length / recordsPerPage) + 1;\n    const begin = (page - 1) * recordsPerPage;\n    const end = page * recordsPerPage;\n    const pageData = tableData && filteredData.slice(begin, end);\n    const tableProps = {\n      data: pageData, dataSize, goTo: this.goTo, isFirstPage, isLastPage, sort: this.sort,\n      setActive: this.setActive, sortDirection, sortBy,\n    };\n    return (\n    <div className=\"App\">\n      {appState === 'initial'\n      && <div className=\"buttons\">\n        <button className=\"button button-initial\" onClick={this.chooseDataSize('big')}>Big data</button>\n        <button className=\"button button-initial\" onClick={this.chooseDataSize('small')}>Small data</button>\n      </div>}\n      {appState === 'request' && <Loader />}\n      {appState === 'success'\n      && <>\n        <Filter handleChange={this.handleFilterChange} handleSubmit={this.handleFilterSubmit} text={filter.text} />\n        <Form\n          isCompleted={isCompleted}\n          data={formData}\n          handleSubmit={this.addRow}\n          handleChange={this.handleFormChange}\n          />\n        <Table {...tableProps} />\n      </>}\n      {appState === 'fail' && <div className=\"fail\">\n        <span className=\"error-message\">{errorText}</span>\n        <a href=\".\">Go back</a>\n        </div>}\n      {activeId && <Info {...activeInfo}/>}\n    </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}